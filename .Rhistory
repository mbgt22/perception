View(X3)
X3 <- saumon[1064:1087,  ]
View(X3)
rownames(saumon[1064:1087,  ]) <- X3$IKIDEN
saumon <- saumon[,3:100]
saumon <- data.frame(saumon)
PCA(saumon, quali.sup =c(31:98), ind.sup = c(1064:1087))
rownames(saumon) <- saumon$IKIDEN
saumon <-fread("saumon2.csv", stringsAsFactors = TRUE,dec = ",", encoding ="Latin-1")
rownames(saumon) <- saumon$IKIDEN
rownames(saumon) <- saumon$IKIDEN
?var
rownames(saumon)
rownames(saumon)[1] <- "test"
rownames(saumon)
saumon <- data.frame(saumon)
rownames(saumon) <- saumon$IKIDEN
PCA(saumon, quali.sup =c(31:98), ind.sup = c(1064:1087))
saumon <- saumon[,3:100]
saumon <- data.frame(saumon)
PCA(saumon, quali.sup =c(31:98), ind.sup = c(1064:1087))
library(data.table)
library(FactoMineR)
library(tidyverse)
data <- fread("trih.txt")
d <- data[,2:430]
e <- strsplit(names(data), "-")[2:430]
e <-data.frame(t(data.frame(strsplit(names(data),"-")[2:430])))
colnames(data[2:430]) <- e$X1
e$X1 <- as.factor(e$X1)
summary(e$X1)
groupe = as.vector(summary(e[,1],175 ))
colnames(data[,2:430]) <- e$X1
d <- data.frame(data[,2:430])
colnames(d) = e$X1
View(d)
View(e)
trih <- fread("trih.txt")
View(trih)
groupe = as.vector(summary(e[,1],175 ))
summary(e[,1],175 )
MFA(trih, group = as.vector(summary(e[,1],175 )))## A finir à reprendre
as.vector(summary(e[,1],175 )
)
MFA
?MFA
View(e)
colnames(trih [,2:430]) <- e$X1
e$X1
as.string(e$X1)
as.chracter(e$X1)
as.character(e$X1)
colnames(trih [,2:430]) <- as.character(e$X1)
View(trih)
colnames(trih [,2:430]) <- as.character(e$X1)
View(trih)
colnames(trih[,2:430]) <- as.character(e$X1)
View(trih)
names(trih)
as.character(e$X1) <- colnames(trih[,2:430])
as.character(e$X1)
n <- as.character(e$X1)
colnames(trih[,2:430])<- n
View(trih)
library(dplyr)
trih <-rename(trih,n)
trih <-rename(trih,select(n) =n)
trih <-rename(trih,
colnames(trih) =n)
colnames(trih)
colnames(trih) =n
colnames(trih[2:430]) =n
colnames(trih[,2:430]) =n
colnames(trih)<- c("Sitmuli",n)
MFA(trih, group = as.vector(summary(e[,1],175 )))## A finir à reprendre
fahst(trih = groupe = as.vector(summary(e[,1],175 ))
fahst(trih , groupe = as.vector(summary(e[,1],175 ))
fahst(trih , groupe = as.vector(summary(e[,1],175 ))
fahst(trih , groupe = as.vector(summary(e[,1],175 ))
)
?fahst
?? fahst
MFA(trih, group = as.vector(summary(e[,1],175 )))## A finir à reprendre
MFA(trih[,2:430], group = as.vector(summary(e[,1],175)))## A finir à reprendre
install.packages("SensoMineR")
library(SensoMineR)
trih <- fread("trih.txt")
e <- strsplit(names(data), "-")[2:430]
e <-data.frame(t(data.frame(strsplit(names(data),"-")[2:430])))
e$X1 <- as.factor(e$X1)
groupe = as.vector(summary(e[,1],175 ))
MFA(trih[,2:430], group = as.vector(summary(e[,1],175)))
res.fasht <- fahst(trih,group = groupe)
?fahst
res.MFA<-MFA(trih[,2:430], group = as.vector(summary(e[,1],175)))
View(trih)
res.fasht <- fahst(trih,group = groupe)
trih <- fread("trih.txt",header=TRUE)
trih[,1]
row.names(trih) <- trih[,1]
row.names(trih) <- as.character(trih[,1])
rownames(trih) <- as.character(trih[,1])
rownames(trih)
as.character(trih[,1])
rownames(trih) <- trih[,1]
trih[,1]
res.fasht <- fahst(trih[,2:430],group = groupe)
?fahst()
fahst()
??fahst()
fahst
res.fasht.ex <- fahst(trih[1:3,2:430],group = groupe[1])
res.fasht.ex <- fahst(trih[,2:4],group = groupe[1])
groupe[1]
groupe[1:2]
res.fasht.ex <- fahst(trih[,2:6],group = groupe[1:2])
res.fasht <- fahst(trih[,2:430],group = groupe)
res.fasht
plot(res.fasht)
res.fasht <- fahst(trih[,2:430],group = groupe)
fahst
library(SensoMineR)
fahst
res.MFA
res.MFA$separate.analyses
res.MFA
fasht
fahst
View(res.MFA)
coord.niv = matrix(0, ncol(trih), 5)
rownames(coord.niv) = colnames(trih)
colnames(coord.niv) = colnames(res.MFA$ind$coord)
eta2 <- function(x, gpe) {
vartot <- function(x) {
res <- sum((x - mean(x))^2)
return(res)
}
varinter <- function(x, gpe) {
moyennes <- tapply(x, gpe, mean)
effectifs <- tapply(x, gpe, length)
res <- (sum(effectifs * (moyennes - mean(x))^2))
return(res)
}
res <- varinter(x, gpe)/vartot(x)
return(res)
}
for (i in 1:ncol(trih)) {
coord.niv[i, ] = apply(res.MFA$ind$coord, 2, eta2, trih[,i])
}
View(coord.niv)
trih <- fread("trih.txt")
library(data.table)
library(FactoMineR)
library(tidyverse)
library(SensoMineR)
rownames(trih) <- c("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P")
View(trih)
rnames <- trih[,1]
plot(res.MFA)
plot.group(res.MFA)
res.MFA
d <- cbind(res.MFA$ind$coord,design)
## Contribution  et design
design <- readxl::read_excel("Design.xls")
d <- cbind(res.MFA$ind$coord,design)
d <- d[,-6]
res.PCA <- PCA(d,quali.sup = c(6:12),scale.unit =FALSE)
e <- strsplit(names(trih),".")
e <-data.frame(t(data.frame(strsplit(names(trih),"-"))))
e$X1 <- as.factor(e$X1)
nlevels(e$X1)
groupe = as.vector(summary(e[,1],175))
trih <- data.frame(trih)
trih <-trih[,sort(names(trih))]
rownames(trih) <-
trih <- trih[,2:430]
trih <- trih[,2:430]
trih <- fread("trih.txt")
trih <- trih[,2:430]
e <- strsplit(names(trih),".")
e <-data.frame(t(data.frame(strsplit(names(trih),"-"))))
e$X1 <- as.factor(e$X1)
nlevels(e$X1)
groupe = as.vector(summary(e[,1],175))
trih <- data.frame(trih)
trih <-trih[,sort(names(trih))]
for (i in 1:dim(trih)[2]) trih[,i] <- as.factor(trih[,i])
res.MFA<-MFA(trih,
group = groupe,
type = rep("n",nlevels(e$X1)))
enfant <- trih[,c("E80.H1","E80.H2")]
design <- readxl::read_excel("Design.xls")
View(enfant)
d <- cbind(res.MFA$ind$coord,design)
View(d)
rownames(d) <- d[,6]
d <- d[,-6]
res.PCA <- PCA(d,quali.sup = c(6:12),scale.unit =FALSE)
d2 <- cbind(d,enfant)
res.PCA2 <- PCA(d2, quali.sup=c(6:14),scale.unit=FALSE )
new.table <- cbind(res.MFA$group$coord ,res.MFA$group$coord,enfant)
groupe2 = c(5,5,1,1)
res.MFA.E1 <- MFA(new.table, ncp = 5,
type = group = groupe2 ,
res.MFA.E1 <- MFA(new.table, ncp = 5,
type =c("c","c","n","n"), group = groupe2 ,
num.group.sup = c(3,4))
new.table <- cbind(res.MFA$group$coord ,res.MFA$group$coord,enfant)
res.MFA$group$coord
new.table <- cbind(res.MFA$ind$coord,res.MFA$ind$coord,enfant)
groupe2 = c(5,5,1,1)
res.MFA.E1 <- MFA(new.table, ncp = 5,
type =c("c","c","n","n"), group = groupe2 ,
num.group.sup = c(3,4))
es.MFA.E1 <- MFA(new.table, ncp = 5,
type =c("c","c","n","n"), group = groupe2 ,
num.group.sup = c(3,4), name.groupe.sup = c("H1",H2))
res.MFA.E1 <- MFA(new.table, ncp = 5,
type =c("c","c","n","n"), group = groupe2 ,
num.group.sup = c(3,4), name.groupe = c("GR1","GR2","H1","H2"))
res.MFA.E1 <- MFA(new.table, ncp = 5,
type =c("c","c","n","n"), group = groupe2 ,
num.group.sup = c(3,4), name.group= c("GR1","GR2","H1","H2"))
plot(res.MFA.E1)
rownames(new.table) <- design[,1]
rep(1,9)
new.table <- cbind(res.MFA$ind$coord,res.MFA$ind$coord,enfant,design)
rownames(new.table) <- new.table[,13]
new.table <- new.table[,-13]
View(new.table)
groupe2 = cbind(c(5,5), rep(1,9))
type2 = cbind (c("c","c"), rep("n",9))
type2 = c("c","c", rep("n",9))
groupe2 = c(5,5, rep(1,9))
name_groupe <-  cbind(c("GR1","GR2","H1","H2"), names(design))
View(name_groupe)
name_groupe <-c("GR1","GR2","H1","H2", names(design))
res.MFA.E1 <- MFA(new.table, ncp = 5,
type = type2, group = groupe2 ,
num.group.sup = c(3,4,5,6,7,8,9), name.group= name_groupe)
groupe2
length(groupe2)
length(name_groupe)
name_groupe
name_groupe <- name_groupe(-5)
name_groupe <- name_groupe[-5]
name_groupe
res.MFA.E1 <- MFA(new.table, ncp = 5,
type = type2, group = groupe2 ,
num.group.sup = c(3,4,5,6,7,8,9), name.group= name_groupe)
res.MFA.E1 <- MFA(new.table, ncp = 5,
type = type2, group = groupe2 ,
num.group.sup = c(3:11), name.group= name_groupe)
33.93/17.8
17.8/33.93
res.MFA.E1$quali.var.sup$coord
res.MFA.E1$quali.var.sup$coord.partiel
catdes(design,num.var=10)
d_e <- cbind(design[,-6]),enfant]
d_e <- cbind(design[-6,]),enfant]
d_e <- cbind(design[,-6],enfant]
descript <- readxl::read_excel("Descriptive.xls")
View(descript)
PCA (descript, quali.sup = c(1:3,11:19))
PCA (descript, quali.sup = c(1:3,10:19))
for (i in 13:19) descript[,i] <- as.factor(descript[,i])
descript$Ind <- as.factor(descript$Ind)
descript$Jour <- as.factor(descript$Jour)
descript$Prénom <- as.factor(descript$Prénom)
descript$Symétrique <- as.factor(descript$Symétrique)
descript$Age <- as.factor(descript$Age)
descript$Sexe <- as.factor(descript$Sexe)
descript$Juge <- as.factor(descript$Juge)
descript$Lunettes <- as.factor(descript$Lunettes)
descript$DroitierGaucher <- as.factor(descript$DroitierGaucher)
PCA (descript[,1:16], quali.sup = c(1:3,9,12:16))
PCA (descript[,1:16], quali.sup = c(1:3,9,11:16))
PCA (descript[,1:16], quali.sup = c(1:3,8,11:16))
PCA (descript[,1:16], quali.sup = c(1:3,8,12:16), var.sup = 11)
PCA (descript[,1:16], quali.sup = c(1:3,8,12:16), quanti.sup = 11)
dir(tempdir())
library(FactoMineR)
data(cars)
head(cars)
View(cars)
data(decathlon)
View(decathlon)
head(descript)
summary(descript)
descript <- readxl::read_excel("Descriptive.xls", stringAsFactor = TRUE)
?read_excel
dir.create(tempdir())
?read_excel
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(FactoMineR)
library(tidyverse)
library(SensoMineR)
trih <- fread("trih.txt")
rnames <- trih[,1]
trih <- trih[,2:430]
e <- strsplit(names(trih),".")
e <-data.frame(t(data.frame(strsplit(names(trih),"-"))))
e$X1 <- as.factor(e$X1)
nlevels(e$X1)
groupe = as.vector(summary(e[,1],175))
trih <- data.frame(trih)
trih <-trih[,sort(names(trih))]
for (i in 1:dim(trih)[2]) trih[,i] <- as.factor(trih[,i])
summary(trih)
v <- c()
for (i in 1: dim(trih)[2]) v <-append(v, nlevels(trih[,i]))
plot(v) ## On a pas de variables sans variabilité.
## Maintenant on récupère le descriptif de la tâche de tri et on va regarder parmis les varibales ce
# qui caracétrise vraiement la tâche de tri et ce qui caractérise les enfant
descript <- readxl::read_excel("Descriptive.xls", )
descript$Ind <- as.factor(descript$Ind)
descript$Jour <- as.factor(descript$Jour)
descript$Prénom <- as.factor(descript$Prénom)
descript$Symétrique <- as.factor(descript$Symétrique)
descript$Age <- as.factor(descript$Age)
descript$Sexe <- as.factor(descript$Sexe)
descript$Juge <- as.factor(descript$Juge)
descript$Lunettes <- as.factor(descript$Lunettes)
descript$DroitierGaucher <- as.factor(descript$DroitierGaucher)
PCA(descript[,1:16], quali.sup = c(1:3,8,11:16))
descript$classetemps <- as.factor(descript$classetemps)
PCA(descript[,1:16], quali.sup = c(1:3,8,11:16))
PCA(descript[,1:16], quali.sup = c(1:3,8,10:16))
res.des<- PCA(descript[,1:16], quali.sup = c(1:3,8,10:16))
plot(res.des, habillage = 11)
?plot.PCA
plot.PCA(res.des, habillage = 11)
plot.PCA(res.des, habillage = 11, graph.type = "classic")
plot.PCA(res.des, habillage = 11, graph.type = "classic", invisible = "quali")
plot.PCA(res.des, habillage = 11, graph.type = "classic", invisible = "quali", label="none")
plot.PCA(res.des, habillage = 11, graph.type = "classic", invisible = "quali", label="none", ellipse = TRUE)
plotellipses(res.des)
res.des<- PCA(descript[,c(4:7,9,11)], quali.sup = c(6))
plot.PCA(res.des, habillage = 11, graph.type = "classic", invisible = "quali", label="none")
plotellipses(res.des)
?plotellipses
plotellipses(res.des,label ="none")
res.MFA<-MFA(trih,
group = groupe,
type = rep("n",nlevels(e$X1)))
### Coordonnée des groupes
new.table <- cbind(res.MFA$ind$coord,res.MFA$ind$coord,enfant,design[,-1])
rownames(new.table) <- new.table[,13]
install.packages("BradleyTerry2")
library(BradleyTerry2)
install.packages("BradleyTerry2")
library(BradleyTerry2)
install.packages("BradleyTerry2")
library(BradleyTerry2)
install.packages("BradleyTerry2")
dir(create(tempdir))
dir.create(tempdir())
install.packages("BradleyTerry2")
library(BradleyTerry2)
raw_data <- readxl::read_excel("C:/Users/mathi/Documents/COURS INGE/DATA SCIENCE/Perception/Perception/base donnees indiv acteurs Anonyme.xlsx")
raw_data <- raw_data_handsome %>%
mutate (pair = paste(raw_data$alimentA,raw_data$alimentB,sep = "-"))
raw_data <- raw_data %>%
mutate (pair = paste(raw_data$alimentA,raw_data$alimentB,sep = "-"))
raw_data <- raw_data %>%
group_by(pair) %>%
mutate(win_handsome_a <- summary(handsomeA)) %>%
mutate(win_handsome_b<-summary(handsomeB))
raw_data <- raw_data %>%
group_by(pair) %>%
mutate(win_handsome_a <- sum(handsomeA)) %>%
mutate(win_handsome_b<-sum(handsomeB))
View(raw_data)
data <- raw_data %>%
group_by(pair) %>%
mutate(win_handsome_a <- sum(handsomeA)) %>%
mutate(win_handsome_b<-sum(handsomeB)) %>%
data <- raw_data %>%
group_by(pair) %>%
mutate(win_handsome_a <- sum(handsomeA)) %>%
mutate(win_handsome_b<-sum(handsomeB))
aggregate(raw_data[,3:4],by=list(raw_data$alimentA,raw_data$alimentB),sum
aggregate(raw_data[,3:4],by=list(raw_data$alimentA,raw_data$alimentB),sum)
aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
handsome_data <- aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
talented_data <- aggregate(raw_data[,10:11],by=list(raw_data$alimentA,raw_data$alimentB),sum)
handsome_data <- aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
talented_data <- aggregate(raw_data[,10:11],by=list(raw_data$alimentA,raw_data$alimentB),sum)
handsome_data <- countToBinomial(handsome_data)
handsome_data <- aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
talented_data <- aggregate(raw_data[,10:11],by=list(raw_data$alimentA,raw_data$alimentB),sum)
handsome_data <- countsToBinomial(handsome_data)
talented_data <- countsToBinomial(talented_data)
handsome_data
talented_data
handsome_data <- aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
talented_data <- aggregate(raw_data[,10:11],by=list(raw_data$alimentA,raw_data$alimentB),sum)
#handsome_data <- countsToBinomial(handsome_data)
#talented_data <- countsToBinomial(talented_data)
handsome_data
talented_data
handsome_data <- aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
talented_data <- aggregate(raw_data[,10:11],by=list(raw_data$alimentA,raw_data$alimentB),sum)
citeModel_handsome_data <- BTm(cbind(hansomeA, hansomeB), Group.1,Group.2, ~ Groupe,
+ id = "Group.", data = handsome_data)
handsome_data <- aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
talented_data <- aggregate(raw_data[,10:11],by=list(raw_data$alimentA,raw_data$alimentB),sum)
citeModel_handsome_data <- BTm(cbind(hansomeA, hansomeB), Group.1,Group.2, ~ Groupe,
id = "Group.", data = handsome_data)
handsome_data <- aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
talented_data <- aggregate(raw_data[,10:11],by=list(raw_data$alimentA,raw_data$alimentB),sum)
citeModel_handsome_data <- BTm(cbind(handsomeA, handsomeB), Group.1,Group.2, ~ Groupe,
id = "Group.", data = handsome_data)
handsome_data <- aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
talented_data <- aggregate(raw_data[,10:11],by=list(raw_data$alimentA,raw_data$alimentB),sum)
citeModel_handsome_data <- BTm(cbind(handsomeA, handsomeB), player1=Group.1,player2=Group.2, ~ Groupe,
id = "Group.", data = handsome_data)
handsome_data <- aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
talented_data <- aggregate(raw_data[,10:11],by=list(raw_data$alimentA,raw_data$alimentB),sum)
citeModel_handsome_data <- BTm(cbind(handsomeA, handsomeB), player1=Group.1,player2=Group.2,
id = "Group.", data = handsome_data)
handsome_data <- aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
talented_data <- aggregate(raw_data[,10:11],by=list(raw_data$alimentA,raw_data$alimentB),sum)
citeModel_handsome_data <- BTm(outcome = cbind(handsomeA, handsomeB), player1=Group.1,player2=Group.2,
, data = handsome_data)
handsome_data <- aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
talented_data <- aggregate(raw_data[,10:11],by=list(raw_data$alimentA,raw_data$alimentB),sum)
citeModel_handsome_data <- BTm(outcome = cbind(handsomeA, handsomeB), player1=Group.1,player2=Group.2, data = handsome_data)
handsome_data <- aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
talented_data <- aggregate(raw_data[,10:11],by=list(raw_data$alimentA,raw_data$alimentB),sum)
Model_handsome <- BTm(outcome = cbind(handsomeA,handsomeB), player1=Group.1,player2=Group.2,
data =handsome_data)
raw_data$alimentA <- as.factor(raw_data$alimentA)
raw_data$alimentB <- as.factor(raw_data$alimentB)
handsome_data <- aggregate(raw_data[,8:9],by=list(raw_data$alimentA,raw_data$alimentB),sum)
talented_data <- aggregate(raw_data[,10:11],by=list(raw_data$alimentA,raw_data$alimentB),sum)
Model_handsome <- BTm(outcome = cbind(handsomeA,handsomeB), player1=Group.1,player2=Group.2,
data =handsome_data)
library("qvcalc")
handsome.qv <- qvcalc(BTabilities(Model_hansome))
handsome.qv <- qvcalc(BTabilities(Model_handsome))
plot(hansome.qv)
plot(handsome.qv)
d2 <- cbind(d,enfant)
res.PCA2 <- PCA(d2, quali.sup=c(6:14),scale.unit=FALSE )
## Autre solution
design_e1=cbind(design,trih[,"E80.H1"])
catdes(design_e1, num.var=8) ## Donne la clé de séparation à sa première hierachie
### Coordonnée des groupes
new.table <- cbind(res.MFA$ind$coord,res.MFA$ind$coord,enfant,design[,-1])
rownames(new.table) <- new.table[,13]
### Coordonnée des groupes
new.table <- cbind(res.MFA$ind$coord,res.MFA$ind$coord,enfant,design[,-1])
new.table <- new.table[,-13]
groupe2 = c(5,5, rep(1,9))
type2 = c("c","c", rep("n",9))
name_groupe <-c("GR1","GR2","H1","H2", names(design))
name_groupe <- name_groupe[-5]
res.MFA.E1 <- MFA(new.table, ncp = 5,
type = type2, group = groupe2 ,
num.group.sup = c(3:11), name.group= name_groupe)
### Coordonnée des groupes
new.table <- cbind(res.MFA$ind$coord,res.MFA$ind$coord,enfant,design[,-1])
rownames(new.table) <- new.table[,13]
new.table <- new.table[,-13]
rownames(new.table) <- design[,1]
rownames(new.table) <- design[1,]
design[,1]
rownames(new.table)
rownames(new.table) <- design[,1]
### Coordonnée des groupes
new.table <- data.frame(cbind(res.MFA$ind$coord,res.MFA$ind$coord,enfant,design[,-1]))
new.table <- new.table[,-13]
rownames(new.table) <- design[,1]
rownames(new.table) <- as.vector(design[,1])
names(design)
name_groupe <-c("GR1","GR2","H1","H2", names(design))
name_groupe
name_groupe <- name_groupe[-5]
name_groupe
### Coordonnée des groupes
new.table <- data.frame(cbind(res.MFA$ind$coord,res.MFA$ind$coord,enfant,design[,-1]))
new.table <- new.table[,-13]
groupe2 = c(5,5, rep(1,8))
type2 = c("c","c", rep("n",8))
name_groupe <-c("GR1","GR2","H1","H2", names(design))
name_groupe <- name_groupe[-5]
res.MFA.E1 <- MFA(new.table, ncp = 5,
type = type2, group = groupe2 ,
num.group.sup = c(3:11), name.group= name_groupe)
### Coordonnée des groupes
new.table <- data.frame(cbind(res.MFA$ind$coord,res.MFA$ind$coord,enfant,design[,-1]))
new.table <- new.table[,-13]
groupe2 = c(5,5, rep(1,8))
type2 = c("c","c", rep("n",8))
name_groupe <-c("GR1","GR2","H1","H2", names(design))
name_groupe <- name_groupe[-5]
res.MFA.E1 <- MFA(new.table, ncp = 5,
type = type2, group = groupe2 ,
num.group.sup = c(3:10), name.group= name_groupe)
length(name_groupe)
name_groupe
### Coordonnée des groupes
new.table <- data.frame(cbind(res.MFA$ind$coord,res.MFA$ind$coord,enfant,design[,-1]))
groupe2 = c(5,5, rep(1,9))
type2 = c("c","c", rep("n",9))
name_groupe <-c("GR1","GR2","H1","H2", names(design))
name_groupe <- name_groupe[-5]
res.MFA.E1 <- MFA(new.table, ncp = 5,
type = type2, group = groupe2 ,
num.group.sup = c(3:10), name.group= name_groupe)
